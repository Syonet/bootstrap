// Forms
// -------------------------
input:not([type]),
input[type="text"],
input[type="password"],
input[type="date"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="month"],
input[type="week"],
input[type="email"],
input[type="search"],
input[type="tel"],
input[type="number"],
input[type="range"],
input[type="color"],
input[type="submit"].syo-button,
input[type="reset"].syo-button,
input[type="button"].syo-button,
button.syo-button,
select,
textarea {
  min-height: @input-height;
  height: @input-height;
  padding: 3px;
  border: 1px solid @input-border;
  background-color: @input-background;

  // Tem que usar line-height: normal por causa de um bug do Firefox.
  #font .shorthand(@input-text-color, normal);
  .border-radius(@input-border-radius);
  .box-sizing(border-box);
  .transition(all .15s linear);
  text-shadow: 0 1px 0 #fff;

  &:hover {
    border-color: @input-hover-border;
    color: @input-hover-text;
    background-color: @input-hover-background;
    .box-shadow(0 1px 2px rgb(210, 210, 210));
  }

  &:focus {
    border-color: @input-focus-border;
    background-color: @input-background;
    .box-shadow(none);
  }

  &.input-block-level {
    display: block;
    width: 100%;
  }

  &[class*="span"] {
    float: none;
  }

  &[disabled],
  &.syo-disabled {
    border-color: @input-disabled-border !important;
    color: @input-disabled-text !important;
    background: @input-disabled-background !important;
    .box-shadow(~"none !important");
    cursor: default;
  }
}

textarea {
  // Reseta o height do textarea, afinal eles tem rows!
  height: auto;
}

select {
  line-height: @input-height;
  // Padding necessário para alinhar verticalmente o texto do option selecionado.
  padding: ((@input-height - @base-line-height) / 2) 2px;
}

input[type="checkbox"],
input[type="radio"] {
  position: relative;
  top: 0.2em;
}

input[type="button"].syo-button,
input[type="submit"].syo-button,
input[type="reset"].syo-button,
button.syo-button {
  display: inline-block;
  cursor: pointer;
  padding-left: 5px;
  padding-right: 5px;
  white-space: nowrap;
  .transition(~"border-color 0.15s linear, color 0.15s linear, box-shadow 0.15s linear");

  &, &:focus { #gradient .vertical(); }

  &:focus {
    outline: dotted thin @gray-dark;
    outline-offset: 1px;
  }

  // Usamos imagem de background, desnecessário setar a cor.
  //&:hover     { background-color: @buttonHoverBackrgoundColor; }
  &:active    { background: @button-active-background-color; }
}

// Labels, fieldsets, legends
// -------------------------
fieldset {
  margin: 2px;
  padding: .5em;
  border: 1px solid @gray-light;
  .border-radius(@border-radius-large);
  .box-sizing(border-box);
}

legend {
  padding: 0 10px;
  border: 1px solid @gray-light;
  #font .shorthand(@text-color, @base-line-height, @base-font-size - 1, @base-font-family, bold);
  background-color: @gray-lighter;
  .border-radius(@base-border-radius);
}

label {
  display: inline-block;
  #font .shorthand(@text-color, @input-height);
  vertical-align: middle;
  text-align: right;

  > input,
  + input,
  > select,
  + select,
  > textarea,
  + textarea,
  > button,
  + button {
    margin-left: 3px;
  }

  // Alinha o checkbox/radio com a primeira linha de texto do label pai
  > input[type="checkbox"],
  > input[type="radio"] {
    position: relative;
    top: 0.15em;
  }
}

input, textarea, select, button {
  + label {
    margin-left: 3px;
  }
}

// syo-field
// -------------------------
.syo-field {
  margin-bottom: 3px;
  #font .shorthand();

  &.syo-field-inline {
    display: inline-block;
  }

  > .syo-field-controls {
    display: inline-block;
    vertical-align: top;

    &:not([class*="span"]) {
      margin-left: 3px;
    }
  }

  > input,
  > textarea,
  > select,
  > button {
    vertical-align: top;
  }

  > input[type="radio"],
  > input[type="checkbox"] {
    position: relative;
    top: 0.5em;
  }

  // Bloco de ajuda de um syo-field
  .syo-field-help {
    display: block;
    color: @input-text-color;
  }
}

// Estados
// -------------------------

// Inputs
input {
  // Sucesso
  &.syo-success {
    &, &:hover, &:focus {
      border-color: @input-success-color;
      color: @input-success-color;
    }
  }

  // Erro
  &.syo-error {
    &, &:hover, &:focus {
      border-color: @input-error-color;
      color: @input-error-color;
    }
  }
}

// Botão
.syo-button {
  // Sucesso
  &.syo-success {
    border-color: @input-success-color;

    &, &:focus {
      #gradient .vertical(@input-success-highlight-color, @input-success-color);
    }

    &:hover, &:focus {
      border-color: darken(@input-success-color, 5%);
      background-color: @input-success-color;
    }

    &:active {
      color: @input-success-color;
    }
  }

  // Erro
  &.syo-error {
    border-color: @input-error-color;

    &, &:focus {
      #gradient .vertical(@input-error-highlight-color, @input-error-color);
    }

    &:hover, &:focus {
      border-color: darken(@input-error-color, 5%);
      background-color: @input-error-color;
    }
  }

  &.syo-error, &.syo-success {
    text-shadow: none; // Remove aquele text-shadow branco que não combina com as cores de sucesso/erro
    .transition(none);

    &, &:focus, &:hover {
      color: #fff;
    }

    &:active {
      background: @button-active-background-color;
    }

    &:hover, &:focus {
      background-position: 0 -15px;
      .transition(~"background-position 0.15s linear");
    }
  }

  // Sobrescreve o color quando active + hover
  &.syo-success:active { color: @input-success-color; }
  &.syo-error:active { color: @input-error-color; }
}