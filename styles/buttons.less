/* =================================================================================================================
   Base
   ================================================================================================================= */
   
/*
 * 1. FF4 Precisa do height definido
 * 2. Elementos anchor não possuem o alinhamento centralizado por default
 * 3. Desabilita efeitos de links
 */
.syo-button {
  height: @input-height; /* 1 */
  padding: ( ( ( @input-height - @base-line-height ) - 2px ) / 2 ) 12px;
  border: 1px solid fade( @input-border, 35% );
  display: inline-block;
  vertical-align: middle;
  border-bottom-color: lighten( @input-border, 10% );
  text-align: center; /* 2 */
  #font .shorthand( @input-text-color );
  #gradient .vertical();
  .border-radius( @base-border-radius );
  .box-shadow( 0 1px 0 fade( #FFF, 20% ) inset);
  &:hover {
    border-color: @input-hover-border;
    background: @component-bg;
    .transition( @button-bg-transition );
  }
  &:focus {
    outline: dotted thin #333;
  }
  &.syo-active,
  &:active {
    background: @gray-lighter;
    border-color: fade( @input-border, 70% );
    .box-shadow( 0 2px 4px fade( #000, 15% ) inset );
    outline: 0;
  }
  &:hover, &:active {
    color: @input-hover-text;
    text-decoration: none; /* 3 */
  }
}

/*
 * 1. Corrige altura de quando é um elemento input
 */
input.syo-button {
  height: @input-height; /* 1 */
}

/* =================================================================================================================
   Buttonset
   ================================================================================================================= */
   
/*
 * 1. Evita borda dupla
 * 2. Usado para considerar o "z-index" de um elemento com "position: static"
 * 3. Aumentando o z-index faz com que a borda do item ativo/hover fique sobre a dos seus vizinhos
 * 4. Corrige border-radius no primeiro e no último botões do buttonset
 * 5. Evita espaçamento vertical se o buttonset tiver "display: inline-block"
 */
.syo-buttonset {
  vertical-align: middle; /* 5 */
  .clear-float();
  > .syo-button {
    float: left;
    .border-radius( 0 );
    + .syo-button {
      margin-left: -1px; /* 1 */
    }
    &.syo-active,
    &:hover,
    &:focus {
      position: relative; /* 2 */
      z-index: 1; /* 3 */
    }
    &:first-child {
      .border-radius-left( @base-border-radius ); /* 4 */
    }
    &:last-child  {
      .border-radius-right( @base-border-radius ); /* 4 */
    }
  }
}

/* =================================================================================================================
   States
   ================================================================================================================= */
   
.syo-button.syo-success {
  #gradient .vertical( @input-success-highlight-color, @input-success-color );
  border-color: @input-success-color;
  &:hover {
    background: @input-success-color;
    border-color: @input-success-hover-border;
  }
}

.syo-button.syo-error {
  #gradient .vertical( @input-error-highlight-color, @input-error-color );
  border-color: @input-error-color;
  &:hover {
    background: @input-error-color;
    border-color: @input-error-hover-border;
  }
}

/* Por padrão a cor do texto é branco para todos os botões com cor de fundo */
.syo-button.syo-success,
.syo-button.syo-error {
  color: #FFF;
}

.syo-button[disabled],
.syo-button.syo-disabled {
  // TODO: É realmente necessário o uso de "!important" aqui? Será que não podemos aumentar a especificidade no lugar?
  border-color: @input-disabled-border !important;
  background: @input-disabled-background !important;
  color: @input-disabled-text !important;
  cursor: default;
  .box-shadow( none );
  .opacity( 0.8 );
}